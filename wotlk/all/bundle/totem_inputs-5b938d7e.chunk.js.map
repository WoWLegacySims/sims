{"version":3,"file":"totem_inputs-5b938d7e.chunk.js","sources":["../../../../../ui/core/components/totem_inputs.ts"],"sourcesContent":["import { IconEnumPicker } from '../components/icon_enum_picker.js';\nimport { IconPicker } from '../components/icon_picker.js';\nimport * as InputHelpers from '../components/input_helpers.js';\nimport { FLAMETONGUETOTEM, HEALINGSTREAMTOTEM, MAGMATOTEM, MANASPRINGTOTEM, SEARINGTOTEM, STONESKINTOTEM, STRENGTHOFEARTHTOTEM, TOTEMOFWRATH } from '../constants/auras.js';\nimport { IndividualSimUI } from '../individual_sim_ui.js';\nimport { Player } from '../player.js';\nimport { Spec } from '../proto/common.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tShamanTotems,\n\tWaterTotem,\n} from '../proto/shaman.js';\nimport { ActionId, ActionIDMap } from '../proto_utils/action_id.js';\nimport { ShamanSpecs } from '../proto_utils/utils.js';\nimport { EventID } from '../typed_event.js';\nimport { ContentBlock } from './content_block.js';\nimport { Input } from './input.js';\n\nexport function TotemsSection(parentElem: HTMLElement, simUI: IndividualSimUI<ShamanSpecs>): ContentBlock {\n\tconst contentBlock = new ContentBlock(parentElem, 'totems-settings', {\n\t\theader: { title: 'Totems' }\n\t});\n\n\tconst totemDropdownGroup = Input.newGroupContainer();\n\ttotemDropdownGroup.classList.add('totem-dropdowns-container', 'icon-group');\n\n\tconst fireElementalContainer = document.createElement('div');\n\tfireElementalContainer.classList.add('fire-elemental-input-container');\n\n\tcontentBlock.bodyElement.appendChild(totemDropdownGroup);\n\tcontentBlock.bodyElement.appendChild(fireElementalContainer);\n\n\tconst earthTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'earth-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffdfba', value: EarthTotem.NoEarthTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(STRENGTHOFEARTHTOTEM), value: EarthTotem.StrengthOfEarthTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(STONESKINTOTEM), value: EarthTotem.StoneskinTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8143), value: EarthTotem.TremorTotem },\n\t\t],\n\t\tequals: (a: EarthTotem, b: EarthTotem) => a == b,\n\t\tzeroValue: EarthTotem.NoEarthTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.earth || EarthTotem.NoEarthTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.earth = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t},simUI);\n\n\tconst waterTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'water-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#bae1ff', value: WaterTotem.NoWaterTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(MANASPRINGTOTEM), value: WaterTotem.ManaSpringTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(HEALINGSTREAMTOTEM), value: WaterTotem.HealingStreamTotem },\n\t\t],\n\t\tequals: (a: WaterTotem, b: WaterTotem) => a == b,\n\t\tzeroValue: WaterTotem.NoWaterTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.water || WaterTotem.NoWaterTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.water = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t},simUI);\n\n\tconst fireTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'fire-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffb3ba', value: FireTotem.NoFireTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(MAGMATOTEM), value: FireTotem.MagmaTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(SEARINGTOTEM), value: FireTotem.SearingTotem },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(TOTEMOFWRATH), value: FireTotem.TotemOfWrath, showWhen: (player: Player<ShamanSpecs>) => player.getTalents().totemOfWrath },\n\t\t\t{ actionId: ActionIDMap.fromSpellId(FLAMETONGUETOTEM), value: FireTotem.FlametongueTotem },\n\t\t],\n\t\tequals: (a: FireTotem, b: FireTotem) => a == b,\n\t\tzeroValue: FireTotem.NoFireTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.fire || FireTotem.NoFireTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.fire = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t},simUI);\n\n\tconst airTotemPicker = new IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'air-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#baffc9', value: AirTotem.NoAirTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(8512), value: AirTotem.WindfuryTotem },\n\t\t\t{ actionId: ActionId.fromSpellId(3738), value: AirTotem.WrathOfAirTotem },\n\t\t],\n\t\tequals: (a: AirTotem, b: AirTotem) => a == b,\n\t\tzeroValue: AirTotem.NoAirTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.air || AirTotem.NoAirTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.air = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t},simUI);\n\n\t// Enhancement Shaman uses the Fire Elemental Inputs with custom inputs.\n\tif (simUI.player.spec != Spec.SpecEnhancementShaman) {\n\t\tconst fireElementalBooleanIconInput = InputHelpers.makeBooleanIconInput<ShamanSpecs, ShamanTotems, Player<ShamanSpecs>>({\n\t\t\tgetModObject: (player: Player<ShamanSpecs>) => player,\n\t\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems || ShamanTotems.create(),\n\t\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: ShamanTotems) => {\n\t\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\t\tnewOptions.totems = newVal;\n\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t\t},\n\t\t\tchangeEmitter: (player: Player<Spec.SpecEnhancementShaman>) => player.specOptionsChangeEmitter,\n\t\t}, ActionId.fromSpellId(2894), \"useFireElemental\");\n\n\t\tnew IconPicker(fireElementalContainer, simUI.player, fireElementalBooleanIconInput,simUI);\n\t}\n\n\treturn contentBlock;\n}\n"],"names":["TotemsSection","parentElem","simUI","contentBlock","ContentBlock","header","title","totemDropdownGroup","Input","newGroupContainer","classList","add","fireElementalContainer","document","createElement","bodyElement","appendChild","IconEnumPicker","player","extraCssClasses","numColumns","values","color","value","EarthTotem","NoEarthTotem","actionId","ActionIDMap","fromSpellId","STRENGTHOFEARTHTOTEM","StrengthOfEarthTotem","STONESKINTOTEM","StoneskinTotem","ActionId","TremorTotem","equals","a","b","zeroValue","changedEvent","specOptionsChangeEmitter","getValue","getSpecOptions","totems","earth","setValue","eventID","newValue","newOptions","ShamanTotems","create","setSpecOptions","WaterTotem","NoWaterTotem","MANASPRINGTOTEM","ManaSpringTotem","HEALINGSTREAMTOTEM","HealingStreamTotem","water","FireTotem","NoFireTotem","MAGMATOTEM","MagmaTotem","SEARINGTOTEM","SearingTotem","TOTEMOFWRATH","TotemOfWrath","showWhen","getTalents","totemOfWrath","FLAMETONGUETOTEM","FlametongueTotem","fire","AirTotem","NoAirTotem","WindfuryTotem","WrathOfAirTotem","air","spec","Spec","SpecEnhancementShaman","fireElementalBooleanIconInput","InputHelpers.makeBooleanIconInput","getModObject","newVal","changeEmitter","IconPicker"],"mappings":"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"}